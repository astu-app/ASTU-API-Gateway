/**
 * University Data Service
 * Сервис по работе с университетскими данными
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package api.university.client.apis

import io.ktor.client.*
import io.ktor.client.call.*
import io.ktor.client.request.*
import io.ktor.http.*
import api.university.client.models.AddDisciplineRequest
import api.university.client.models.DisciplineDTO

class DisciplineControllerApi(
    private val httpClient: HttpClient,
    private val basePath: String = "http://localhost:8080"
) {

    /**
     *
     *
     * @param body
     * @return DisciplineDTO
     */
    suspend fun addDiscipline(body: AddDisciplineRequest): DisciplineDTO {
        val response = httpClient.post("$basePath/api/disciplines") {
            contentType(ContentType.Application.Json)
            setBody(body)
        }
        return when (response.status) {
            HttpStatusCode.OK -> response.body<DisciplineDTO>()
            else -> throw IllegalStateException("${response.status}")
        }
    }

    /**
     *
     *
     * @return kotlin.Array<DisciplineDTO>
     */
    suspend fun getDisciplines(): List<DisciplineDTO> {
        val response = httpClient.get("$basePath/api/disciplines")
        return when (response.status) {
            HttpStatusCode.OK -> response.body<List<DisciplineDTO>>()
            else -> throw IllegalStateException("${response.status}")
        }
    }
}
