/**
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package api.request.client.apis

import api.request.client.ErrorResponse
import api.request.client.RequestServiceException
import api.request.client.models.AddTemplateDTO
import api.request.client.models.TemplateDTO
import io.ktor.client.*
import io.ktor.client.call.*
import io.ktor.client.request.*
import io.ktor.http.*
import java.util.*

class TemplateControllerApi(val client: HttpClient, private val basePath: String = "http://localhost:8085") {

    /**
     *
     *
     * @param body
     * @return java.util.UUID
     */
    suspend fun addTemplate(body: AddTemplateDTO): String {
        val response = client.post("${basePath}api/template") {
            contentType(ContentType.Application.Json)
            setBody(body)
        }

        return when (response.status) {
            HttpStatusCode.OK -> response.body<String>()
            HttpStatusCode.BadRequest -> {
                val error = response.body<ErrorResponse>()
                throw RequestServiceException("400: ${error.message}")
            }
            else -> throw RequestServiceException("Не удалось создать шаблон заявления")
        }
    }

    /**
     *
     *
     * @param accountId
     * @return kotlin.Array<TemplateDTO>
     */
    suspend fun getTemplates(accountId: UUID): List<TemplateDTO> {
        val response = client.get("${basePath}api/template/$accountId")

        return when (response.status) {
            HttpStatusCode.OK -> response.body<List<TemplateDTO>>()
            else -> throw RequestServiceException("Не удалось получить список шаблонов")
        }
    }
}
